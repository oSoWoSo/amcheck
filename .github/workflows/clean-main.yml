name: ðŸ›Ÿ clean-main

on:
  repository_dispatch:
    types: [add-changes]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: write

env:
  REPO: ${{ github.repository_owner }}/monorepo
  BRANCH: clean-main

jobs:
  clean-branch:
    name: ðŸ›Ÿ clean-main
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout AM repository"
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO }}
          ref: main
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}

      - name: "Prepare branch"
        run: |
          git config user.name "${{ github.repository_owner }}"
          git config user.email "noreply@github.com"
          
          # Checkout the target branch or create it if it doesn't exist
          if git ls-remote --exit-code --heads origin "${{ env.BRANCH }}"; then
            git fetch origin "${{ env.BRANCH }}"
            git checkout "${{ env.BRANCH }}"
          else
            git checkout -b "${{ env.BRANCH }}"
          fi

          # Ensure branch is up-to-date with main
          git fetch origin main
          git rebase origin/main || git rebase --abort

      - name: "Find and Add Commits"
        run: |
          echo "Finding and adding non-merge, non-empty commits"
          
          # Find and cherry-pick non-merge, non-empty commits
          commits=$(git log origin/main --not $(git rev-parse --abbrev-ref HEAD) --pretty=format:"%H" --no-merges --no-empty)
          for commit in $commits; do
            echo "Cherry-picking commit $commit"
            git cherry-pick $commit || echo "Failed to cherry-pick commit $commit"
          done

          # Find and cherry-pick merge commits (non-empty)
          merge_commits=$(git log origin/main --not $(git rev-parse --abbrev-ref HEAD) --merges --no-empty --pretty=format:"%H")
          for merge_commit in $merge_commits; do
            echo "Cherry-picking merge commit $merge_commit"
            git cherry-pick -m 1 $merge_commit || echo "Failed to cherry-pick merge commit $merge_commit"
          done

      - name: "Push changes"
        run: |
          if ! git diff --quiet; then
            git push origin HEAD:"${{ env.BRANCH }}"
          else
            echo "No changes to push."
          fi

      - name: "Create Pull Request"
        run: |
          if ! git diff --quiet; then
            gh pr create --base main --head "${{ env.BRANCH }}" --title "Add changes from main to ${BRANCH}" --body "Adding non-empty commits from main branch."
          else
            echo "No changes to create a pull request."
          fi
